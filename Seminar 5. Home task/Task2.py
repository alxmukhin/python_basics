"""Задание 2.

Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_odd_counter(n, evens=0, odds=0):
    new_n = n // 10
    rest = n % 10
    if new_n == 0 and rest == 0:
        print(f"Количество четных цифр в числе {evens},"
              f" нечетных - {odds}.")
        return
    else:
        if rest % 2:
            odds += 1
        else:
            evens += 1
    even_odd_counter(new_n, evens, odds)


number = int(input("Введите натуральное число: "))
even_odd_counter(number)
